#!/usr/bin/python

from subprocess import call
from ibpy import imb
import shutil
import tempfile
import os.path
import sys
from optparse import OptionParser

def convert(pdf_fn, imb_fn):
    book = imb.Book()
    book.load(imb_fn)
    tmp_dir = tempfile.mkdtemp("ibimb2pdf")
    tif_imgs = []
    for page in book.pages:
        img_fn = page.img_fn
        bimg_fn = os.path.basename(img_fn)
        s, e = os.path.splitext(bimg_fn)
        d_bimg_fn = s + '.tif'
        d_img_fn = os.path.join(tmp_dir, d_bimg_fn)
        if e.startswith('.tif'):
            shutil.copyfile(img_fn, d_img_fn)
        else:
            call(['convert', img_fn, d_img_fn])
        tif_imgs.append(d_bimg_fn)
    
    cwd = os.getcwd()
    os.chdir(tmp_dir)

    cmdline = ['tiffcp']
    cmdline.extend(tif_imgs)
    tif_fn = os.path.basename(pdf_fn) + '.tif'
    abs_tif_fn = os.path.join(tmp_dir, tif_fn)
    cmdline.append(tif_fn)
    call(cmdline)

    os.chdir(cwd)
    call(['tiff2pdf', '-nz', '-o', pdf_fn, abs_tif_fn])

    shutil.rmtree(tmp_dir)

def main():
    usage = 'Usage: %s [options] <file.imb>' % (os.path.basename(sys.argv[0]),)
    parser = OptionParser(usage=usage)
    parser.add_option('-o', '--output', dest="pdf_fn",
                      help="Output PDF file name")
    options, args = parser.parse_args()
    if len(args) != 1:
        parser.print_help()
        return -1
    imb_fn = args[0]
    if options.pdf_fn:
        pdf_fn = options.pdf_fn
    else:
        s, ext = os.path.splitext(imb_fn)
        pdf_fn = s + '.pdf'
    convert(pdf_fn, imb_fn)
    return 0

if __name__ == '__main__':
    main()
